-----------------------------------
0 unwinding, etc.),

-----------------------------------
1 RetryTimer(TimeSpan.FromHours(10))

-----------------------------------
2 d)d(?!d)")

-----------------------------------
3 Process())

-----------------------------------
4 h.dateCol 
       ).Max()

-----------------------------------
5 OleDbConnection())

-----------------------------------
6 OleDbCommand())

-----------------------------------
7 cmd.ExecuteReader())
    {
      while (dr.Read())

-----------------------------------
8 OleDbConnection())

-----------------------------------
9 OleDbCommand())
    {
        conn.Open()

-----------------------------------
10 cmd.ExecuteReader())
        {
            while (dr.Read())

-----------------------------------
11 RetryTimer(TimeSpan.FromHours(10))

-----------------------------------
12 termios.tcgetattr(sys.stdin)
    tty.setraw(sys.stdin.fileno())
    select.select([sys.stdin], [], [], 0)

-----------------------------------
13 sys.stdin.read(1)

-----------------------------------
14 termios.tcsetattr(sys.stdin, termios.TCSADRAIN,

-----------------------------------
15 Point(Cursor.Position.X - 1, Cursor.Position.Y - 1)

-----------------------------------
0 them (i.e. DataBind())

-----------------------------------
1 ConfigurationProperty("MyStuff", typeof(MyStuffElement), null)

-----------------------------------
2 ConfigurationProperty("SomeStuff", typeof(string), "

-----------------------------------
3 ConfigurationManager.GetSection("MyStuffSection") as MyWeb.Configuration

-----------------------------------
4 UInt32)((

-----------------------------------
5 UInt16)((

-----------------------------------
6 Array.Copy(Utilities.ByteArrayToUInt32Array(b), (

-----------------------------------
7 "].ToString() + "\

-----------------------------------
8 SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', 'HelloWorld')), 3, 32)

-----------------------------------
9 Marshal.PtrToStructure(handle.AddrOfPinnedObject(), typeof(YourStruct))

-----------------------------------
10 SmtpClient(conf.Mail.Host, conf.Mail.Port)

-----------------------------------
11 ').style

-----------------------------------
12 select (string)dr["Name"]).Distinct().OrderBy(

-----------------------------------
13 int.TryParse( Convert.ToString( o ),

-----------------------------------
14 GetType).  int

-----------------------------------
15 CreateObject("Scripting.Dictionary")
objDictionary.Add "Name", "Scott"
objDictionary.Add "Age", "20"
if objDictionary.Exists("Name")

-----------------------------------
0 Request.IsPost())

-----------------------------------
1 DateTime.Now.Date.AddDays(-1)

-----------------------------------
2 u.id, u.name, h

-----------------------------------
3 cmd.ExecuteReader()) {
  if (dr.Read())

-----------------------------------
4 while (dr.Read())

-----------------------------------
5 CreateObject("Scripting.Dictionary")
objDictionary

-----------------------------------
6 TestContext(CreateSparqlTripleStore())

-----------------------------------
7 ", os.path.expanduser("

-----------------------------------
8 fonts.extend(
                [os.path.join(

-----------------------------------
9 SCG (System.Collections.Generic),

-----------------------------------
10 GCHandle.Alloc(buff, GCHandleType.Pinned)

-----------------------------------
11 Date( Date.parse( dateParts.join("/")+(

-----------------------------------
12 " ") ) )

-----------------------------------
13 processorArchitecture.Equals("x86"))

-----------------------------------
14 rTest.IsMatch(formattedString))
        return rTest.Replace(formattedString, string.Empty)

-----------------------------------
15 Regex(@"(\e(\[([\d

-----------------------------------
0 ".ContainsMabster())

-----------------------------------
1 equivalent .Method().Method.Method()

-----------------------------------
2 Date(Date.parse( dateString ))

-----------------------------------
3 o).Take(5)

-----------------------------------
4 Html.Resource("ResourceName", "foo", "bar")

-----------------------------------
5 SCG (System.Collections.Generic),

-----------------------------------
6 Node.Bounds.Contains( pt ) )

-----------------------------------
7 C.
        Buffer.BlockCopy("Hello!".ToCharArray(), 0,

-----------------------------------
8 GCHandleType.Pinned.
        fixed (

